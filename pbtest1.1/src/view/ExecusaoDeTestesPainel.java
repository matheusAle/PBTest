/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.CasoDeTesteController;
import controller.ExecusaoDeTestesController;
import controller.RoteiroDeTesteController;
import java.awt.Color;
import java.awt.Component;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.Map;
import javafx.concurrent.Task;
import javax.swing.JLabel;
import javax.swing.JScrollPane;
import model.CasoDeTeste;
import model.RoteiroDeTestes;
import view.Componetes.MeuScrollbarUI;

/**
 *
 * @author matheus
 */
public class ExecusaoDeTestesPainel extends javax.swing.JPanel implements Painel{

    
    Map<?,?> dados;
    RoteiroDeTestes roteiro;
    /**
     * Creates new form ExecusaoDeTestesPainel
     */
    public ExecusaoDeTestesPainel() {
        initComponents();
        btniniciar.addMouseListener(new MouseAdapter() {
            Color anterior;
            @Override
            public void mouseEntered(MouseEvent e) {
                anterior = btniniciar.getBackground();
                btniniciar.setBackground(new Color(221,221,221));
            }

            @Override
            public void mouseExited(MouseEvent e) {
                btniniciar.setBackground(anterior);
            }

            @Override
            public void mouseClicked(MouseEvent e) {
                iniciarExecucao();
            }
            
        });
        
        btnIrParaAMatriz.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                HashMap<String, Object> hashMap = new HashMap<String, Object>();
                hashMap.put("roteiro", roteiro);
                mainApp.trocarDePainel(Paineis.MATRIZ, hashMap);
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        resutadoConteiner = new javax.swing.JScrollPane();
        painelResutado = new javax.swing.JPanel();
        resultado = new javax.swing.JLabel();
        barraDeProgresso = new javax.swing.JProgressBar();
        tabelaDeResultado = new javax.swing.JTabbedPane();
        btnIrParaAMatriz = new javax.swing.JButton();
        btniniciar = new javax.swing.JButton();

        painelResutado.setLayout(null);

        resultado.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        resultado.setText("jLabel1");
        resultado.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        resultado.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 10, 10, 10));
        resultado.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        painelResutado.add(resultado);
        resultado.setBounds(0, 0, 370, 260);

        resutadoConteiner.setViewportView(painelResutado);

        setPreferredSize(new java.awt.Dimension(438, 300));

        barraDeProgresso.setBackground(new java.awt.Color(255, 255, 255));
        barraDeProgresso.setForeground(new java.awt.Color(51, 204, 0));

        tabelaDeResultado.setBackground(new java.awt.Color(255, 255, 255));
        tabelaDeResultado.setTabLayoutPolicy(javax.swing.JTabbedPane.SCROLL_TAB_LAYOUT);
        tabelaDeResultado.setTabPlacement(javax.swing.JTabbedPane.LEFT);

        btnIrParaAMatriz.setBackground(new java.awt.Color(255, 255, 255));
        btnIrParaAMatriz.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnIrParaAMatriz.setForeground(new java.awt.Color(102, 102, 102));
        btnIrParaAMatriz.setText("ver matriz");
        btnIrParaAMatriz.setBorder(javax.swing.BorderFactory.createCompoundBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.white, java.awt.Color.white, java.awt.Color.lightGray, java.awt.Color.white), javax.swing.BorderFactory.createEmptyBorder(10, 10, 10, 10)));
        btnIrParaAMatriz.setFocusPainted(false);

        btniniciar.setBackground(new java.awt.Color(255, 255, 255));
        btniniciar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btniniciar.setForeground(new java.awt.Color(102, 102, 102));
        btniniciar.setText("iniciar");
        btniniciar.setBorder(javax.swing.BorderFactory.createCompoundBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.white, java.awt.Color.white, java.awt.Color.lightGray, java.awt.Color.white), javax.swing.BorderFactory.createEmptyBorder(10, 10, 10, 10)));
        btniniciar.setFocusPainted(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(tabelaDeResultado)
                .addGap(10, 10, 10))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btniniciar, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnIrParaAMatriz, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(213, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(barraDeProgresso, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(barraDeProgresso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnIrParaAMatriz, javax.swing.GroupLayout.PREFERRED_SIZE, 27, Short.MAX_VALUE)
                    .addComponent(btniniciar, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tabelaDeResultado, javax.swing.GroupLayout.DEFAULT_SIZE, 231, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JProgressBar barraDeProgresso;
    private javax.swing.JButton btnIrParaAMatriz;
    private javax.swing.JButton btniniciar;
    private javax.swing.JPanel painelResutado;
    private javax.swing.JLabel resultado;
    private javax.swing.JScrollPane resutadoConteiner;
    private javax.swing.JTabbedPane tabelaDeResultado;
    // End of variables declaration//GEN-END:variables

    @Override
    public void preProcessamentoAntesDeAbrir() {
        roteiro = (RoteiroDeTestes) dados.get("roteiro");
    }

    @Override
    public void preProcessamentoAntesDeFechar() {
    }

    @Override
    public Component getCompomenteRaiz() {
        return this;
    }

    @Override
    public TipoDePainel pegarTipoDePainel() {
        return TipoDePainel.NULO;
    }

    @Override
    public void btnNovoOnClick(MouseEvent e) {
    }

    @Override
    public void btnSalvarOnClick(MouseEvent e) {
    }

    @Override
    public void btnCancelarOnClick(MouseEvent e) {
    }

    @Override
    public void btnLimparOnClick(MouseEvent e) {
    }

    @Override
    public void setData(Map<?, ?> dados) {
        this.dados = dados;
    }
    Integer p;
    private void iniciarExecucao() {
        btnIrParaAMatriz.setVisible(false);
        btniniciar.setEnabled(false);
        ExecusaoDeTestesController.carregar();
        RoteiroDeTesteController.carregarCasosDeTesteDoRoteiro(roteiro);
        LinkedList<CasoDeTeste> lista = roteiro.getCasosDeTeste();
        tabelaDeResultado.removeAll();
        barraDeProgresso.setMaximum(lista.size()-1);
        barraDeProgresso.setMinimum(0);
        revalidate();
        p = 0;
        for(CasoDeTeste caso : lista) {
            String resultado = ExecusaoDeTestesController.run(caso.getSrcCasoDeTeste());
            contruirPainelDeResultado(resultado, caso.getSrcCasoDeTeste());            
            barraDeProgresso.getModel().setValue(p++);
            CasoDeTesteController.salvarResultado(caso, resultado);
        }
        btnIrParaAMatriz.setVisible(true);
        btniniciar.setEnabled(true);
        super.revalidate();

    }
    
    private void contruirPainelDeResultado(String resultado, String n) {
        JScrollPane conteiner = new javax.swing.JScrollPane();
        JLabel res = new javax.swing.JLabel();
        conteiner.getVerticalScrollBar().setUI(new MeuScrollbarUI());
        conteiner.getHorizontalScrollBar().setUI(new MeuScrollbarUI());
        res.setFont(new java.awt.Font("Ubuntu", 0, 14));
        res.setText("<html>"+resultado.replaceAll("\n", "<br>")+"</html>");
        res.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        res.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 10, 10, 10));
        res.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        conteiner.setViewportView(res);
        tabelaDeResultado.addTab(n, null, conteiner);
    }
}
