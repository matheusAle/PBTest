/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import view.cards.ProjetoCard;
import controller.ProjetoController;
import java.awt.Color;
import java.awt.Component;
import java.awt.GridLayout;
import java.awt.event.MouseEvent;
import java.util.Map;
import model.Projeto;

/**
 *
 * @author matheus
 */
public class ProjetosPainel extends javax.swing.JPanel implements Painel{

    private TipoDePainel tipo;
    private int quantidadeDeLinhas = 1;
    private GridLayout layout;
    /**
     * Creates new form UsuariosPainel1
     */
    public ProjetosPainel() {
        initComponents();
        layout = (GridLayout) this.getLayout();
        tipo = TipoDePainel.LISTAGEM;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 10, 10, 10));
        setLayout(new java.awt.GridLayout(1, 1, 10, 10));
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

    
    private void carregarProjetosNaLista () {
        
        if (ProjetoController.temProjetoAtivo()){
            ProjetoCard c = novoCard(ProjetoController.getProjetoAtivo());
            c.setBackground(new Color(251, 85, 85));
            c.repaint();
            addItemNaLista(c);
        }
        ProjetoController.getListaDeProjetos().forEach(u -> {
            addItemNaLista(novoCard(u));
        });
        
    }
    
    private ProjetoCard novoCard(Projeto u){
        return new ProjetoCard(u);
    }
    
    private void addItemNaLista(ProjetoCard card){
        layout.setRows(quantidadeDeLinhas++);
        super.add(card);
        super.revalidate();
    }

    @Override
    public void preProcessamentoAntesDeAbrir() {
        quantidadeDeLinhas = 1;
        super.removeAll();
        carregarProjetosNaLista();
    }

    @Override
    public void preProcessamentoAntesDeFechar() {
    }

    @Override
    public Component getCompomenteRaiz() {
        return this;
    }

    @Override
    public void btnNovoOnClick(MouseEvent e) {
        mainApp.trocarDePainel(Paineis.FORMULARIO_DE_CADASTRO_DE_PROJETO, null);
    }

    @Override
    public void btnSalvarOnClick(MouseEvent e) {
    }

    @Override
    public void btnCancelarOnClick(MouseEvent e) {
    }

    @Override
    public void btnLimparOnClick(MouseEvent e) {
    }

    @Override
    public void setData(Map<?, ?> dados) {
    }

    @Override
    public TipoDePainel pegarTipoDePainel() {
        return tipo;
    }
}
